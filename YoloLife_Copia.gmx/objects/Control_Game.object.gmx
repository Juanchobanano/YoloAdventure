<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set global variables
if(room == Room_Presentation){

    // Crear Variables.
    
        // Inicialize Facebook.
        facebook_init();
        
        // Play the soundtrack.
        globalvar audio;
        audio = sn_mainsoundtrack1;
        audio_play_sound(audio, 1, 0);
    
        // Delete info.
        Delete_Info("rate", "rate2", "iap_data", "info", 
                    "estrellas", "tiempo", "tiempo2",
                    "noticias2", "Datos", "Monedas");
            
        // Idioma!
        globalvar idioma;
        idioma = "en";
        
            // Lector de idioma.
            if(file_exists(working_directory + "Settings.sav")){
                ini_open(working_directory + "Settings.sav");
                idioma = ini_read_string("idioma","pass",0);
                ini_close();
            }
    
        globalvar musica_on;
        musica_on = true;
    
        // Set the cursor to noone
        //window_set_cursor(cr_none);
        //cursor_sprite = spr_hand;
    
        // Cargar Proveedores de Publicidad.
        
            // AdColony.
            var appId = "vz21a73355af2e40f1ab";
            var zoneId = "vz21a73355af2e40f1ab";
            var v4Id = "v4vc8584ba276fbf46c5b5";
            AdColony_Init(appId, zoneId, v4Id);
            
            // Admob.
            
        // Backgrounds_x.
        globalvar bk_x;
        
        bk_x = ds_list_create();
        repeat(2){ ds_list_add(bk_x, 0); }
        
        // Powerups.
        globalvar powerups;
        powerups = ds_list_create();
        
            // Player doesn't have powerups.
            repeat(3){ ds_list_add(powerups, 3); }
    
            // Load powerups.
            
            
        // Monedas.
        globalvar global_monedas;
        global_monedas = 0;
        
        // Personaje Settings (GEMAS).
        globalvar coins, attract;
        
        // Niveles.
        globalvar medallas_niveles, niveles_count, nivel_selected, 
                  player_info, level_object, tiempo_niveles, show_levels;
        
            // How many levels do I have to draw?
            show_levels = 20;
                  
            // Level Local variables.
            globalvar cantidad, objetivo, objeto, completo_objetivo, objective_reward
                      alreadycompleted, show_medalla;
               
        player_info = ds_grid_create(3, 4);
        nivel_selected = 0;
            
            // Declare the level_object grid.
            level_object = ds_grid_create(100,2);
            Fill_Objectives();
            
            // Load the grid if the file exists.
            if(file_exists(working_directory + 'level_object.sav')){
                ini_open(working_directory + 'level_object.sav');
                var str = ini_read_string('level_object', 'fu2387FH23Ff', 0);
                if(str != ""){ ds_grid_read(level_object, str); }
                ini_close();
            }
            
            // Declare the tiempo_niveles grid.
            tiempo_niveles = ds_grid_create(30, 2);
            Fill_Times();
            
            
        
        // Tienda.
        globalvar skins_precio, powers_precio, gems_precio, money_precio,
                  skin_selected, gema_selected, category;
            
            // Fifll the Produts Price array..
            Prepare_Products();
        
        // Achievements.
        globalvar logros;
        logros = ds_grid_create(11, 4);
        Fill_Achievement();
        
    // Estrellas Por Nivel.

        // Crear y llenar arreglo con 0s.
        medallas_niveles = ds_grid_create(100,2);
        for(var i = 0; i &lt; 100; i++){ 
            ds_grid_add(medallas_niveles, i, 0, 0); // Medalla.
            ds_grid_add(medallas_niveles, i, 1, 0); // Tiempo.
        }
        
        
    // Guardar la hora.
        
        globalvar hora;
        hora = current_hour;
        
    // Conectar con Google Play Highscores.
        if(!achievement_login_status() and os_is_network_connected()){
            achievement_login();          
        }
        
    // Prepare In App Purchases.
    globalvar precios_iap;
   // Prepare_IAP();
    
    // Load information.
    Load_Game();
        
    // After the game load all the information, set new achievements.
    New_Achievements();
    
    // Achivement.
    Increase_Amount("You have played Yolo Life 50#times!", 1);

            
    
    // Siguiente Room.
    alarm[0] = 40;    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Goto the Room Menu.
room_goto_transition(Room_Menu, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="83">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto_transition(Room_Logros, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(idioma == "en"){
    if(show_question("Do you really want to stop playing Yolo?")){
        game_end();
    }
}else if(idioma == "es"){
    if(show_question("Enserio quieres dejar de jugar Yolo?")){
        game_end();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="66">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var p_map = ds_map_create();
iap_product_details(ds_map_find_value(iap_data, "index"), p_map);
precios_iap = string(ds_map_find_value(p_map, "price"));
ds_map_destroy(p_map);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy all the instances when the level end.
with(all){
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Dibujar Presentaci√≥n.

if(room == Room_Presentation){
    // Dibujar Baius.
    draw_sprite(spr_baius, 0, room_width/2, room_height/2);
    
    // Dibujar Ganadores.
    draw_sprite(spr_nominados, 0, 40, 0);
}else if(room == Room_Menu){
    // Draw version number.
    draw_set_color(c_white);
    draw_set_font(font_divaro_niveles19);
    draw_text(room_width - string_width("Version 2.0.0") - 48, 432 - string_height("Version 2.0.0"), "Version 2.0.0");
}

// Draw hand.
//draw_sprite(spr_hand, 0, mouse_x, mouse_y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
