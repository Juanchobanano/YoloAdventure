<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cargar todos los objetos y variables del nivel.
x = -sprite_get_width(spr_presentation);
with(Home){
    depth = Marco_Inicial.depth - 1;
}
//instance_create(room_width - 24, 24, Home);

// Traduce the language
if(idioma == "en"){
    txt = Traduce(
        "World ", 
        "Trophie", 
        "Objectives",
        "No objectives#available in#this level!",
        "Times",
        "Play",
        "Last time: " + string(ds_grid_get(medallas_niveles, nivel_selected - 1, 1))
    );
}else if(idioma == "es"){
    txt = Traduce(
        "Mundo ", 
        "Trofeo", 
        "Objetivos",
        "No hay objetivos#disponibles para#este nivel!",
        "Tiempos",
        "Jugar",
        "Tiempo anterior: " + string(ds_grid_get(medallas_niveles, nivel_selected - 1, 1))
    );
}

// Cargar jugadores de éste nivel y estrellas.
achievement_load_leaderboard("40tg23r438grejg", 1, 3, achievement_filter_all_players);

// Clean the grid.
ds_grid_clear(player_info, 0);

// Set the stars.
medallas = ds_grid_get(medallas_niveles, nivel_selected - 1, 0);
medalla_index = noone;
switch(medallas){
    case 1:
        medalla_index = 0;
    break;
    case 2:
        medalla_index = 1;
    break;
    case 3:
        medalla_index = 2;
    break;
}

// Objectives variables.
cantidad = 0;
objetivo = "";
objeto = noone;
completo_objetivo = false;
objective_reward = 0;
alreadycompleted = false;

// Get the value of the grid and analyze it, returning global vars definition.
map = ds_grid_get(level_object, nivel_selected - 1, 0); 
Get_Objectives(map);

// Player Grid Define.
player_grid = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Mover a la derecha.
if(x &lt; 0){
    x += 100;
}else{
    x = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="70">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Retorna la naturaleza del evento asíncrono y lo evalua.
var ident = ds_map_find_value(async_load, "id");

// Arreglo con la información de los jugadores.
if (ident == achievement_leaderboard_info)
{
    var lbid = ds_map_find_value(async_load,"leaderboardid");
    if(lbid == "CgkIs9_51u0PEAIQBw" || lbid == "leaderboard1id")
    {
       var numentries = ds_map_find_value(async_load,"numentries");
       for(var i = 0; i &lt; numentries; i++)
       {
          ds_grid_add(player_info, i, 0, ds_map_find_value(async_load, "Player" + string(i)));
          ds_grid_add(player_info, i, 1, ds_map_find_value(async_load, "Playerid" + string(i)));
          ds_grid_add(player_info, i, 2, ds_map_find_value(async_load, "Rank" + string(i)));
          ds_grid_add(player_info, i, 3, ds_map_find_value(async_load, "Score" + string(i)));
          achievement_get_pic(ds_grid_get(player_info, i, 1));
       }
    }
}


// Arreglo con el sprite del jugador.
if (ident == achievement_pic_loaded)
{
    var picid = ds_map_find_value(async_load, "playerid");
    var spriteid = ds_map_find_value(async_load, "spriteid");
    
    for(var i = 0; i &lt; 3; i++){
        if(picid == ds_grid_get(player_info, i, 1)){
            ds_grid_add(player_info, i, 4, spriteid);
        }
    }
    player_grid = true;  
} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* Draw the level settings.
draw_set_color(c_white);
draw_set_font(font_divaro_niveles25);

// Draw the frame.
draw_sprite(spr_presentation, 0, x, 0);

// Draw the number of the level.
var xs = x + 311 - string_width(txt[0] + string(nivel_selected))/2;
var ys = y; // + string_height("World " + string(nivel_selected))/2; 
draw_text_shadow(xs, ys, txt[0] + string(nivel_selected), c_white, c_black, 1);


// Draw "Trophies"
draw_text_shadow(x + 180 - string_width(txt[1])/2, y + 65, txt[1], c_white, c_black, 1); // 125
var xs = x + 90 + (string_width(txt[1]))/2 - sprite_get_width(spr_medal_bronce);

// Draw the medal.
draw_sprite(spr_medallas_grandes, medalla_index,x + 155, 176);


// Draw Objectives if they exists.
draw_text(x + 180 - string_width(txt[2])/2 , 270, txt[2]); // 120
if(objetivo != "noone"){ 
    Set_Objectives(objetivo, cantidad, objeto, ds_grid_get(level_object, nivel_selected - 1, 1)); 

// If there are not available objectives.
}else{
   draw_set_font(font_divaro_niveles19);
   draw_text(x + 97, 310, txt[3]);
}

// Draw the times.
draw_set_color(c_white);
draw_set_font(font_divaro_niveles25);
draw_text_shadow(x + 430 - string_width(txt[4])/2, y + 65,txt[4], c_white, c_black, 1); // 400
Draw_Times(nivel_selected - 1);

// Draw the top players.
if(player_grid){
    for(var i = 0; i &lt; 4; i++){
        var spr = ds_grid_get(player_info, i, 4);
    
        // Draw player's icon.
        if(spr != noone){
            draw_sprite(spr, 0, x, y);
        }
        
        // Draw player's rank.
        draw_text(x, y, ds_grid_get(player_info, i, 2));
        
        // Draw player's name.
        draw_text(x, y, ds_grid_get(player_info, i, 0));
        
        // Draw player's score.
        draw_text(x, y, ds_grid_get(player_info, i, 3));
   
   }
} 

// Draw start buttom.
if(!in_Rectangle(336, 348, 336+sprite_get_width(spr_boton_pres), 348 + sprite_get_height(spr_boton_pres))){
    draw_sprite(spr_boton_pres, 0, x + 336, 348); 
    draw_set_font(font_divaro_niveles25);   
    draw_text(x + 432 - string_width(txt[5])/2,  348 + 8, txt[5]); // 335
}else{
    draw_sprite(spr_boton_pres, 1, x +336, 348);
    draw_set_font(font_divaro_niveles30);
    draw_text(x + 432 - string_width(txt[5])/2, 350, txt[5]); // 333
    if(mouse_check_button_released(mb_left)){
        audio_play_sound(sn_boton_start, 1, 0);
        room_goto_transition((asset_get_index('game' + string(nivel_selected))), 0);
        instance_destroy();
    }
}

// Draw your time.
draw_set_font(font_divaro_niveles25);   
draw_text_shadow(x + 610, y + 70,txt[6], c_white, c_black, 1);
var time = ds_grid_get(medallas_niveles, nivel_selected - 1, 1);
if(time != -1){
    draw_text(x + 638 - string_width(string(time))/2, y + 95, string(time));
}else{
    draw_text(x + 638 - string_width("--.--")/2, y + 95,"--.--");
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the level settings.
draw_set_color(c_white);
draw_set_font(font_rayman_niveles18);

// Draw the frame.
draw_sprite(spr_presentation, 0, x, 0);

// Draw the number of the level.
var xs = x + 64 + 311 - string_width(txt[0] + string(nivel_selected))/2;
var ys = y + 5; // + string_height("World " + string(nivel_selected))/2; 
draw_text_shadow(xs, ys, txt[0] + string(nivel_selected), c_white, c_black, 1);


// Draw "Trophies"
draw_text_shadow(x + 64 + 180 - string_width(txt[1])/2, y + 72, txt[1], c_white, c_black, 1); // 125
var xs = x +64 + 90 + (string_width(txt[1]))/2 - sprite_get_width(spr_medal_bronce);

// Draw the medal.
if(medalla_index != noone) draw_sprite(spr_medallas_grandes, medalla_index,x + 64 +155, 176);


// Draw Objectives if they exists.
draw_text(x +64 + 180 - string_width(txt[2])/2 , 280, txt[2]); // 120
if(objetivo != "noone"){ 
    Set_Objectives(objetivo, cantidad, objeto, ds_grid_get(level_object, nivel_selected - 1, 1)); 

// If there are not available objectives.
}else{
   //draw_set_font(font_divaro_niveles19);
   draw_set_font(font_rayman_niveles12);
   draw_text(x +64 + 97, 320, txt[3]);
}

// Draw the times.
draw_set_color(c_white);
draw_set_font(font_rayman_niveles18);
draw_text_shadow(x +64 + 430 - string_width(txt[4])/2, y + 72,txt[4], c_white, c_black, 1); // 400
Draw_Times(nivel_selected - 1);

// Draw the top players.
if(player_grid){
    for(var i = 0; i &lt; 4; i++){
        var spr = ds_grid_get(player_info, i, 4);
    
        // Draw player's icon.
        if(spr != noone){
            draw_sprite(spr, 0, x, y);
        }
        
        // Draw player's rank.
        draw_text(x, y, ds_grid_get(player_info, i, 2));
        
        // Draw player's name.
        draw_text(x, y, ds_grid_get(player_info, i, 0));
        
        // Draw player's score.
        draw_text(x, y, ds_grid_get(player_info, i, 3));
   
   }
} 

// Draw start buttom.
if(!in_Rectangle(336, 348, 55+336+sprite_get_width(spr_boton_pres), 348 + sprite_get_height(spr_boton_pres))){
    draw_sprite(spr_boton_pres, 0, x + 64 + 336, 348+5); 
    draw_set_font(font_rayman_niveles18);
    draw_text(x +64 + 432 - string_width(txt[5])/2,  348 + 15, txt[5]); // 335
}else{
    draw_sprite(spr_boton_pres, 1, x +64 +336, 348+5);
    draw_set_font(font_rayman_niveles);
    draw_text(x +64 + 432 - string_width(txt[5])/2 /*- 20*/, 360, txt[5]); // 333
    if(mouse_check_button_released(mb_left)){
        audio_play_sound(sn_boton_start, 1, 0);
        room_goto_transition((asset_get_index('game' + string(nivel_selected))), 0);
        with Home instance_destroy();
        instance_destroy();
    }
}

// Draw the last time.
/*switch(Compare_Times(ds_grid_get(medallas_niveles, nivel_selected - 1, 1), nivel_selected - 1)){
    case 3:
        draw_set_color(c_yellow);
    break;
    case 2:
        draw_set_color(make_color_rgb(231, 115, 75));
    break;
    case 1:
        draw_set_color(make_color_rgb(148, 134, 198));
    break;
}*/

// Draw the last time.
if(medalla_index != noone){
    draw_set_font(font_rayman_niveles15)
    draw_text(room_width/2 - string_width(txt[6])/2, room_height - string_height(txt[6]) - 20, txt[6]);
}

/*
// Draw your time.
draw_set_font(font_divaro_niveles25);   
draw_text_shadow(x + 610, y + 70,txt[6], c_white, c_black, 1);
var time = ds_grid_get(medallas_niveles, nivel_selected - 1, 1);
if(time != -1){
    draw_text(x + 638 - string_width(string(time))/2, y + 95, string(time));
}else{
    draw_text(x + 638 - string_width("--.--")/2, y + 95,"--.--");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
