<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Marco</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Recognize the category and select the texts.
x = -room_width;

// Create the Moon.
//instance_create(849, 120, Moon);

// Set local variables.
item_pressed = -1;
dibujar = false;
type = "";
// Traduce the store language!
num_category = Get_Category(category);
Traduce_Store(num_category);

// Get the category and determine the num of products and the array.
// Money: 0 - Powers: 1 - Skins: 2 - Gems: 3
switch(num_category)
{
    case 0:
        num = 5;
        array = money_precio;
        type = "";
        spr = spr_monedas;
        
    break;
    case 1:
        num = 3;
        array = powers_precio;
        
        spr = Traduce(
            spr_freeze, 
            spr_slowdown, 
            spr_puerta
        );
        
        type = "list";
    break;
    case 2:
        num = 11;
        spr = spr_personaje;
        type = "";
        array = skins_precio;
        //array = Organize_Products(skins_precio);
    break;
    case 3:
        num = 6;
        spr = spr_gems_grandes;
        type = "";
        //array = Organize_Products(gems_precio);
        array = gems_precio;
    break;
    
}

// Traduce buttoms text.
if(idioma == "en"){
    botones = Traduce(
                "Buy!",
                "Equip!", 
                "Watch!"
    )
    
}else if(idioma == "es"){
    botones = Traduce(
                "Buy!",
                "Equip!",
                "Ver!"
            )
}

/// Set the achievements text.
banner_height = 160;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move to right.
if(x &lt; 0){
    x += 80;
}else{
    x = 0;
    if(!instance_exists(Home)){
        instance_create(132, 48, Home);
        var inst = instance_create(612, 48, Music);
       // var inst = instance_create(612 - 24, 48, Idioma);
        with(inst){
            depth = Categoria.depth - 1;
        }
       /* var inst2 = instance_create(612 + 12, 48, Music);
        with(inst2){
            depth = Categoria.depth - 1;
        } */
    }   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="66">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var val = ds_map_find_value(iap_data, "type");
switch(val){
   case iap_ev_purchase:
      var map = ds_map_create();
      var purchase_id = ds_map_find_value(iap_data, "index");
      iap_purchase_details(purchase_id, map);
      if(ds_map_find_value(map, "status") == iap_purchased){
          var product_id = ds_map_find_value(map, "product");
          iap_consume(product_id);
      }
      ds_map_destroy(map);
   break;
   case iap_ev_consume:
      var product_id = ds_map_find_value(map, "product");
      if(ds_map_find_value(iap_data, "consumed")){
        switch(product_id){
            case "":
                global.global_monedas += 10; // Aumentar la cantidad de vidas.
            break;
            case "wd":
                global.global_monedas += 10; // Aumentar la cantidad de vidas.
            break;
            case "a":
                global.global_monedas += 200; // Aumentar la cantidad de vidas.
            break;
        }
      }
      // Save the coins info.
      //Save_Data();
   break;
}

/*if(file_exists(working_directory + 'tienda.sav')){
    file_delete(working_directory + 'tienda.sav');
}
ini_open(working_directory + 'tienda.sav');
ini_write_real("tiempo","KIREOJ5E2",tiempo);
ini_write_real("vidas","kjhwep235",vidas);
ini_write_real("municion","5i92ghjr3YHY",municion);
ini_close();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the products.

// Set the starting y offset and height 
yy = view_yview + banner_height + offset;
height = 0;

if(num_category == 0 or num_category == 1){
    Draw_NonDurable_Products(num, num_category, array, ti, des, spr, type);
}else{
    Draw_Durable_Products(num, num_category, array, ti, des, spr, type);
}

// Draw the top banner.
draw_sprite(spr_top_tienda, 0, x + 88, 16); // 151, 48
draw_set_color(make_color_rgb(100,80,58));
draw_set_font(font_rayman_niveles);

// Draw the name of the category.
var xs = x + room_width/2 - string_width(ti[0])/2;
draw_text(xs, 45, ti[0]);

// Draw coins.
if(num_category != 0){
    draw_set_font(font_rayman_niveles18);
    var xs = x+room_width/2 - string_width(string(global_monedas))/2 - sprite_get_width(spr_monedas)/2;
    draw_text_shadow(xs, 87, global_monedas, c_yellow, c_black, .7);
    draw_sprite(spr_monedas, 0, xs + string_width(string(global_monedas)) + sprite_get_width(spr_monedas)/2-7, 90);
}

// Draw the position indicator bar on the right
bar_pos = ((view_hview-banner_height)/height) * offset*-1;
bar_hei = ((view_hview-banner_height)/height) * (view_hview-banner_height)
draw_set_color(c_white);
draw_set_alpha(sidebar_alpha);
draw_rectangle(view_xview+view_wview, view_yview+banner_height+bar_pos, view_xview+view_wview-8, view_yview+banner_height+bar_pos+bar_hei, 0);
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
